basePath: /v1
definitions:
  candidate.AddCertificationRequest:
    properties:
      certification_name:
        type: string
      expiration_date:
        type: string
      issue_date:
        type: string
      issued_by:
        type: string
    required:
    - certification_name
    - issue_date
    - issued_by
    type: object
  candidate.AddEducationRequest:
    properties:
      degree:
        type: string
      description:
        type: string
      end_date:
        type: string
      institution:
        type: string
      start_date:
        type: string
    required:
    - degree
    - institution
    - start_date
    type: object
  candidate.AddExperienceRequest:
    properties:
      company:
        type: string
      description:
        type: string
      end_date:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    required:
    - company
    - job_title
    - start_date
    type: object
  candidate.AddProjectRequest:
    properties:
      category:
        type: string
      description:
        type: string
      project_link:
        type: string
      project_name:
        type: string
    required:
    - project_link
    - project_name
    type: object
  candidate.AddSkillRequest:
    properties:
      skill:
        type: string
    required:
    - skill
    type: object
  candidate.CreateCandidatePersonalInfoRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - email
    - name
    type: object
  candidate.UpdateCandidatePersonalInfoRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - email
    - name
    type: object
  request.CreateUsersRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      role:
        minLength: 4
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ResetPasswordRequest:
    properties:
      email:
        type: string
      new_password:
        description: ResetToken  string `json:"reset_token" binding:"required"`
        minLength: 8
        type: string
    required:
    - email
    - new_password
    type: object
  request.SendOTPRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
      role:
        minLength: 4
        type: string
    type: object
  request.VerifyOTPRequest:
    properties:
      email:
        type: string
      otp:
        type: string
    required:
    - email
    - otp
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: dz-jobs-api-production.up.railway.app
info:
  contact: {}
  description: This is the API documentation for the DZ Jobs portal.
  title: DZ Jobs API
  version: "1.0"
paths:
  /auth/google-connect:
    get:
      description: Connect with Google OAuth
      produces:
      - application/json
      responses:
        "302":
          description: Found
      summary: Google OAuth Connect
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout user and clear cookies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Logout user
      tags:
      - auth
  /auth/refresh-token:
    post:
      description: Refresh access token using refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register user
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user's password using reset token
      parameters:
      - description: Reset password request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Reset password
      tags:
      - auth
  /auth/send-reset-otp:
    post:
      consumes:
      - application/json
      description: Send OTP to user's email for password reset
      parameters:
      - description: Send OTP request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SendOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send OTP for password reset
      tags:
      - auth
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP and generate reset token
      parameters:
      - description: Verify OTP request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP
      tags:
      - auth
  /candidates:
    post:
      consumes:
      - multipart/form-data
      description: Create a new candidate with profile picture and resume
      parameters:
      - description: Profile Picture
        in: formData
        name: profile_picture
        required: true
        type: file
      - description: Resume
        in: formData
        name: resume
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new candidate
      tags:
      - candidates
  /candidates/{id}:
    delete:
      description: Delete candidate by ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete candidate
      tags:
      - candidates
    get:
      description: Get candidate details by ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get candidate by ID
      tags:
      - candidates
    put:
      consumes:
      - multipart/form-data
      description: Update candidate details with profile picture and resume
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Profile Picture
        in: formData
        name: profile_picture
        required: true
        type: file
      - description: Resume
        in: formData
        name: resume
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update candidate
      tags:
      - candidates
  /candidates/{id}/certifications:
    get:
      description: Get all certifications for a candidate by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get certifications by candidate ID
      tags:
      - certifications
    post:
      consumes:
      - application/json
      description: Create a new certification for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Certification request
        in: body
        name: certification
        required: true
        schema:
          $ref: '#/definitions/candidate.AddCertificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new certification
      tags:
      - certifications
  /candidates/{id}/certifications/{certification_id}:
    delete:
      description: Delete a certification by candidate ID and certification ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Certification ID
        in: path
        name: certification_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete certification
      tags:
      - certifications
  /candidates/{id}/education:
    delete:
      description: Delete an education record by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete education record
      tags:
      - education
    get:
      description: Get all education records for a candidate by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get education records by candidate ID
      tags:
      - education
    post:
      consumes:
      - application/json
      description: Create a new education record for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Education request
        in: body
        name: education
        required: true
        schema:
          $ref: '#/definitions/candidate.AddEducationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new education record
      tags:
      - education
  /candidates/{id}/experience:
    delete:
      description: Delete an experience record by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete experience record
      tags:
      - experience
    get:
      description: Get all experience records for a candidate by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get experience records by candidate ID
      tags:
      - experience
    post:
      consumes:
      - application/json
      description: Create a new experience record for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Experience request
        in: body
        name: experience
        required: true
        schema:
          $ref: '#/definitions/candidate.AddExperienceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new experience record
      tags:
      - experience
  /candidates/{id}/personal-info:
    delete:
      description: Delete personal information for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete personal information
      tags:
      - personal_info
    get:
      description: Get personal information for a candidate by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get personal information by candidate ID
      tags:
      - personal_info
    post:
      consumes:
      - application/json
      description: Create personal information for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Personal Info request
        in: body
        name: personal_info
        required: true
        schema:
          $ref: '#/definitions/candidate.CreateCandidatePersonalInfoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create personal information
      tags:
      - personal_info
    put:
      consumes:
      - application/json
      description: Update personal information for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Personal Info request
        in: body
        name: personal_info
        required: true
        schema:
          $ref: '#/definitions/candidate.UpdateCandidatePersonalInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update personal information
      tags:
      - personal_info
  /candidates/{id}/portfolio:
    get:
      description: Get all projects for a candidate by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get projects by candidate ID
      tags:
      - portfolio
    post:
      consumes:
      - application/json
      description: Create a new project for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Project request
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/candidate.AddProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new project
      tags:
      - portfolio
  /candidates/{id}/portfolio/{project_id}:
    delete:
      description: Delete a project by candidate ID and project ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete project
      tags:
      - portfolio
  /candidates/{id}/skills:
    get:
      description: Get all skills for a candidate by candidate ID
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get skills by candidate ID
      tags:
      - skills
    post:
      consumes:
      - application/json
      description: Create a new skill for a candidate
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Skill request
        in: body
        name: skill
        required: true
        schema:
          $ref: '#/definitions/candidate.AddSkillRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new skill
      tags:
      - skills
  /candidates/{id}/skills/{skill}:
    delete:
      description: Delete a skill by candidate ID and skill name
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      - description: Skill name
        in: path
        name: skill
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete skill
      tags:
      - skills
  /users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete user
      tags:
      - users
    get:
      description: Get user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update user
      tags:
      - users
swagger: "2.0"
