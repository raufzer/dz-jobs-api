basePath: /api/v1
definitions:
  request.CreateUsersRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      role:
        minLength: 4
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ResetPasswordRequest:
    properties:
      email:
        type: string
      new_password:
        description: ResetToken  string `json:"reset_token" binding:"required"`
        minLength: 8
        type: string
    required:
    - email
    - new_password
    type: object
  request.SendOTPRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.VerifyOTPRequest:
    properties:
      email:
        type: string
      otp:
        type: string
    required:
    - email
    - otp
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: dz-jobs-api-production.up.railway.app
info:
  contact: {}
  description: This is the API documentation for the DZ Jobs portal.
  title: DZ Jobs API
  version: "1.0"
paths:
  /auth/google/callback:
    get:
      consumes:
      - application/json
      description: Handles the Google OAuth callback and logs the user in or registers
        the user
      parameters:
      - description: OAuth code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully connected via Google
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Error in OAuth callback
          schema:
            $ref: '#/definitions/response.Response'
      summary: Handle Google OAuth callback
      tags:
      - Auth
  /auth/google/connect:
    get:
      consumes:
      - application/json
      description: Initiates the Google OAuth flow
      produces:
      - application/json
      responses:
        "302":
          description: Redirecting to Google OAuth
          schema:
            $ref: '#/definitions/response.Response'
      summary: Connect with Google OAuth
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs the user in and returns access and refresh tokens
      parameters:
      - description: Login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login to the system
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logs the user out and removes authentication cookies
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            $ref: '#/definitions/response.Response'
      summary: Logout the user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user in the system
      parameters:
      - description: User registration request
        in: body
        name: createUserRequest
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Error in user creation
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register a new user
      tags:
      - Auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets the user's password using the provided token and new password
      parameters:
      - description: Reset password request
        in: body
        name: resetPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/request.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Error in password reset
          schema:
            $ref: '#/definitions/response.Response'
      summary: Reset the user's password
      tags:
      - Auth
  /auth/send-reset-otp:
    post:
      consumes:
      - application/json
      description: Sends an OTP to the user's email for password reset
      parameters:
      - description: Send OTP request
        in: body
        name: sendOTPRequest
        required: true
        schema:
          $ref: '#/definitions/request.SendOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Error in sending OTP
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send OTP for password reset
      tags:
      - Auth
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to the user's email for password reset
      parameters:
      - description: Verify OTP request
        in: body
        name: verifyOTPRequest
        required: true
        schema:
          $ref: '#/definitions/request.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Error in OTP verification
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP for password reset
      tags:
      - Auth
swagger: "2.0"
