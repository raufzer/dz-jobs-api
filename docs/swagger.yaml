basePath: /v1
definitions:
  request.CreateUsersRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      role:
        minLength: 4
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.ResetPasswordRequest:
    properties:
      email:
        type: string
      new_password:
        description: ResetToken  string `json:"reset_token" binding:"required"`
        minLength: 8
        type: string
    required:
    - email
    - new_password
    type: object
  request.SendOTPRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.VerifyOTPRequest:
    properties:
      email:
        type: string
      otp:
        type: string
    required:
    - email
    - otp
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: dz-jobs-api-production.up.railway.app
info:
  contact: {}
  description: This is the API documentation for the DZ Jobs portal.
  title: DZ Jobs API
  version: "1.0"
paths:
  /auth/google-connect:
    get:
      description: Connect with Google OAuth
      produces:
      - application/json
      responses:
        "302":
          description: Found
      summary: Google OAuth Connect
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout user and clear cookies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Logout user
      tags:
      - auth
  /auth/refresh-token:
    post:
      description: Refresh access token using refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register user
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user's password using reset token
      parameters:
      - description: Reset password request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Reset password
      tags:
      - auth
  /auth/send-reset-otp:
    post:
      consumes:
      - application/json
      description: Send OTP to user's email for password reset
      parameters:
      - description: Send OTP request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SendOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send OTP for password reset
      tags:
      - auth
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP and generate reset token
      parameters:
      - description: Verify OTP request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP
      tags:
      - auth
swagger: "2.0"
